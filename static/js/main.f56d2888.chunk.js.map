{"version":3,"sources":["logo.svg","components/Card/index.js","utils/utils.js","containers/Game/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","onClick","className","src","image","randomizeArray","arr","sort","a","b","Math","floor","random","showMessage","message","alert","Game","cards","id","cardClicked","card","state","clickedCards","includes","setState","score","length","highestScore","max","console","log","this","map","index","key","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iJAAAA,EAAOC,QAAU,IAA0B,kC,0KCW5BC,G,MARF,SAACC,GACZ,OACE,yBAAKC,QAASD,EAAMC,QAASC,UAAU,wBACrC,yBAAKC,IAAKH,EAAMI,WCNf,SAASC,EAAeC,GAC7B,OAAOA,EAAIC,MAAK,SAACC,EAAGC,GAAJ,OAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAmB,IAAM,GAAK,KAGpE,SAASC,EAAYC,GAC1BC,MAAMD,GAGO,IC2HAE,E,YAjEb,WAAYhB,GAAQ,IAAD,8BACjB,4CAAMA,KA9DRiB,MAAQ,CACN,CACEC,GAAI,QACJd,MAAO,wDAET,CACEc,GAAI,OACJd,MACE,oGAEJ,CACEc,GAAI,QACJd,MACE,qLAEJ,CACEc,GAAI,UACJd,MACE,kFAEJ,CACEc,GAAI,SACJd,MACE,oFAEJ,CACEc,GAAI,OACJd,MACE,8hBAEJ,CACEc,GAAI,UACJd,MACE,kIAEJ,CACEc,GAAI,OACJd,MAAO,wDAET,CACEc,GAAI,SACJd,MACE,+JAEJ,CACEc,GAAI,OACJd,MACE,uEAEJ,CACEc,GAAI,WACJd,MACE,iHAEJ,CACEc,GAAI,QACJd,MACE,wEAIa,EAUnBe,YAAc,SAAAC,GACR,EAAKC,MAAMC,aAAaC,SAASH,EAAKF,KACxCL,EAAY,kBACZ,EAAKW,SAAS,CACZF,aAAc,GACdG,MAAO,EACPR,MAAOZ,EAAe,EAAKgB,MAAMJ,UAE1B,EAAKI,MAAMC,aAAaI,SAAW,EAAKL,MAAMJ,MAAMS,OAAO,GACpEb,EAAY,0BACZ,EAAKW,SAAS,CACZF,aAAc,GACdG,MAAO,EACPE,aAAa,EAAKN,MAAMJ,MAAMS,OAC9BT,MAAOZ,EAAe,EAAKgB,MAAMJ,UAGnC,EAAKO,SAAS,CACZP,MAAOZ,EAAe,EAAKgB,MAAMJ,OACjCK,aAAa,GAAD,mBAAM,EAAKD,MAAMC,cAAjB,CAA+BF,EAAKF,KAChDO,MAAO,EAAKJ,MAAMI,MAAQ,EAC1BE,aAAcjB,KAAKkB,IAAI,EAAKP,MAAMI,MAAQ,EAAG,EAAKJ,MAAMM,iBA7B5D,EAAKN,MAAQ,CACXJ,MAAO,EAAKA,MACZK,aAAc,GACdG,MAAO,EACPE,aAAc,GANC,E,sEAoCT,IAAD,OAEP,OADAE,QAAQC,IAAIC,KAAKV,MAAMC,cAErB,6BACE,2CACA,yBAAKpB,UAAU,OACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,SACb,2CAAiB6B,KAAKV,MAAMI,QAE9B,yBAAKvB,UAAU,SACb,mDAAyB6B,KAAKV,MAAMM,gBAIxC,yBAAKzB,UAAU,OACZ6B,KAAKV,MAAMJ,MAAMe,KAAI,SAACZ,EAAMa,GAAP,OACpB,kBAAC,EAAD,CACEC,IAAKD,EACLhC,QAAS,kBAAM,EAAKkB,YAAYC,IAChChB,MAAOgB,EAAKhB,iB,GAtHP+B,aCMJC,MAJf,WACE,OAAO,kBAAC,EAAD,OCKWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f56d2888.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from \"react\";\r\nimport './style.css';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div onClick={props.onClick} className=\"col-3 card-component\">\r\n      <img src={props.image} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export function randomizeArray(arr) {\r\n  return arr.sort((a, b) => (Math.floor(Math.random() * 1000) > 500 ? 1 : -1));\r\n}\r\n\r\nexport function showMessage(message) {\r\n  alert(message);\r\n}\r\n\r\nexport default {\r\n  randomizeArray,\r\n  showMessage\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Card from \"../../components/Card\";\r\nimport { randomizeArray, showMessage } from \"../../utils/utils\";\r\n\r\nclass Game extends Component {\r\n  cards = [\r\n    {\r\n      id: \"knife\",\r\n      image: \"https://i.ytimg.com/vi/nUj4ObkwrkY/maxresdefault.jpg\"\r\n    },\r\n    {\r\n      id: \"pipe\",\r\n      image:\r\n        \"https://snworksceo.imgix.net/dtc/3fb856c1-1399-4e9b-a2b3-74b8b094c618.sized-1000x1000.jpg?w=1000\"\r\n    },\r\n    {\r\n      id: \"radio\",\r\n      image:\r\n        \"https://cdn.gamer-network.net/2019/articles/2019-10-03-11-23/untitled-goose-game-heading-to-playstation-and-xbox-1570098189092.jpg/EG11/thumbnail/1920x1072/format/jpg/quality/80\"\r\n    },\r\n    {\r\n      id: \"glasses\",\r\n      image:\r\n        \"http://www.thedopeuniversity.com/wp-content/uploads/2019/06/-1560194750067.jpg\"\r\n    },\r\n    {\r\n      id: \"bottle\",\r\n      image:\r\n        \"http://yoyosplayland.com.au/wp-content/uploads/2019/09/goose-bottle-1024x577.gif\"\r\n    },\r\n    {\r\n      id: \"boot\",\r\n      image:\r\n        \"https://img.resized.co/entertainment/eyJkYXRhIjoie1widXJsXCI6XCJodHRwOlxcXC9cXFwvczMtZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cXFwvZW50ZXJ0YWlubWVudGllXFxcL3VwbG9hZHNcXFwvMjAxOVxcXC8wOVxcXC8yOTEzMTMyOVxcXC91bnRpdGxlZC1nb29zZS1nYW1lLXNwZWVkcnVuLnBuZ1wiLFwid2lkdGhcIjoxMjAwLFwiaGVpZ2h0XCI6NjMwLFwiZGVmYXVsdFwiOlwiaHR0cDpcXFwvXFxcL3d3dy5zdGFnaW5nLmVudGVydGFpbm1lbnQuaWVcXFwvaW1hZ2VzXFxcL25vLWltYWdlLnBuZ1wifSIsImhhc2giOiI1N2JiNmUzMjZjYWI3ODY3YjA3MjU5ZDU2YWQzMThmODRhMDMyYTAzIn0=/it-s-possible-to-beat-untitled-goose-game-in-just-over-three-minutes.png\"\r\n    },\r\n    {\r\n      id: \"laundry\",\r\n      image:\r\n        \"https://gamespot1.cbsistatic.com/uploads/screen_kubrick/1574/15746725/3512292-gdc_breakout_untitledgoosegame_indiemix_site.jpg\"\r\n    },\r\n    {\r\n      id: \"honk\",\r\n      image: \"https://i.ytimg.com/vi/_1GLCEPezxk/maxresdefault.jpg\"\r\n    },\r\n    {\r\n      id: \"picnic\",\r\n      image:\r\n        \"https://cdn-static.denofgeek.com/sites/denofgeek/files/styles/main_wide/public/2019/09/untitled-goose-game-house-house-feature-interview.jpeg?itok=-9Ey-lzM\"\r\n    },\r\n    {\r\n      id: \"coat\",\r\n      image:\r\n        \"https://cdn.mos.cms.futurecdn.net/JycrJzD5tvbGHWgjtPrRZY-320-80.jpg\"\r\n    },\r\n    {\r\n      id: \"sandwich\",\r\n      image:\r\n        \"https://i2.wp.com/culturedvultures.com/wp-content/uploads/2019/04/Untitled-Goose-Game.jpg?fit=770%2C513&ssl=1\"\r\n    },\r\n    {\r\n      id: \"peace\",\r\n      image:\r\n        \"https://i.kym-cdn.com/entries/icons/facebook/000/018/215/cover8.jpg\"\r\n    }\r\n  ];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cards: this.cards,\r\n      clickedCards: [],\r\n      score: 0,\r\n      highestScore: 0\r\n    };\r\n  }\r\n\r\n  cardClicked = card => {\r\n    if (this.state.clickedCards.includes(card.id)) {\r\n      showMessage(\"You got Goosed\");\r\n      this.setState({\r\n        clickedCards: [],\r\n        score: 0,\r\n        cards: randomizeArray(this.state.cards)\r\n      });\r\n    } else if (this.state.clickedCards.length === this.state.cards.length+1) {\r\n      showMessage(\"honk--You Win!!!--honk\");\r\n      this.setState({\r\n        clickedCards: [],\r\n        score: 0,\r\n        highestScore:this.state.cards.length,\r\n        cards: randomizeArray(this.state.cards)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        cards: randomizeArray(this.state.cards),\r\n        clickedCards: [...this.state.clickedCards, card.id],\r\n        score: this.state.score + 1,\r\n        highestScore: Math.max(this.state.score + 1, this.state.highestScore)\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.clickedCards);\r\n    return (\r\n      <div>\r\n        <h1>Clicky Game</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-5\"></div>\r\n          <div className=\"col-4\">\r\n            <h2>Your Score: {this.state.score}</h2>\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <h2>Your Highest Score: {this.state.highestScore}</h2>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          {this.state.cards.map((card, index) => (\r\n            <Card\r\n              key={index}\r\n              onClick={() => this.cardClicked(card)}\r\n              image={card.image}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Game from './containers/Game';\r\n\r\n\r\nfunction App() {\r\n  return <Game />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}